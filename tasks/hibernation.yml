- name: Check if hibernation is enabled in /etc/default/grub
  command: grep -q "^.*resume=" /etc/default/grub
  register: grub_resume_check
  ignore_errors: true

- name: Enable hibernation
  tags: hibernation
  when: grub_resume_check.rc != 0
  block:
    - name: Clear the swap file
      become: true
      ansible.builtin.shell: swapoff /swapfile
      ignore_errors: true

    - name: Delete the swap file
      become: true
      ansible.builtin.shell: rm -f /swapfile && rm -f /etc/tmpfiles.d/hibernation_image_size.conf
      ignore_errors: true

    - name: Create a swap file
      become: true
      ansible.builtin.shell: mkswap -U clear --size 16G --file /swapfile && swapon /swapfile

    - name: Configure the fstab
      become: true
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: /swapfile none swap defaults 0 0

    - name: Sped up the wake-up from hibernation
      become: true
      ansible.builtin.lineinfile:
        path: /etc/tmpfiles.d/hibernation_image_size.conf
        line: |
          # https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#About_swap_partition/file_size
          #    Path                   Mode UID  GID  Age Argument
          w    /sys/power/image_size  -    -    -    -   0
        create: true

    - name: Configure the grub and initframs
      become: true
      ansible.builtin.lineinfile:
        path: /enable_hibernate.sh
        line: |
          #!/bin/env bash

          mkinit_contain_resume=`cat /etc/mkinitcpio.conf | grep resume`
          grub_contain_resume=`cat /etc/default/grub | grep resume`

          if [[ -z "$mkinit_contain_resume" ]]; then
            sed -i 's/\(^HOOKS.*\)udev/\1udev resume/' /etc/mkinitcpio.conf
            mkinitcpio -P
          fi
          if [[ -n "$grub_contain_resume" ]]; then
            rm -- "$0"
            exit 0
          fi

          resume=`findmnt -no UUID -T /swapfile`
          resume_offset=`filefrag -v /swapfile | awk '$1=="0:" {print substr($4, 1, length($4)-2)}'`
          if [[ -n "$resume_offset" ]]; then
            sed -i "s/\(.*DEFAULT.*\)\(\"$\)/\1 resume=UUID=$resume resume_offset=$resume_offset\2/" /etc/default/grub
            grub-mkconfig -o /boot/grub/grub.cfg
          else
            echo "Error: Could not determine resume_offset from filefrag output."
            exit 1
          fi

          rm -- "$0"
        create: true
        mode: "+x"

    - name: Execute enable_hibernate.sh
      become: true
      ansible.builtin.shell: sh /enable_hibernate.sh
